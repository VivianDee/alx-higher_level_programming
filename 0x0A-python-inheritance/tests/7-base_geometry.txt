#7-base_geometry.txt

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> geom = BaseGeometry()
>>> geom.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

>>> geom = BaseGeometry()
>>> geom.integer_validator('width', 5)


>>> geom = BaseGeometry()
>>> geom.integer_validator('height', '10')
Traceback (most recent call last):
    ...
TypeError: height must be an integer

>>> geom = BaseGeometry()
>>> geom.integer_validator('length', -5)
Traceback (most recent call last):
    ...
ValueError: length must be greater than 0

>>> geom = BaseGeometry()
>>> geom.integer_validator('side', 0)
Traceback (most recent call last):
    ...
ValueError: side must be greater than 0

>>> geom.integer_validator('side', {3, 4})
Traceback (most recent call last):
    ...
TypeError: side must be an integer

>>> geom.integer_validator('side', True)
Traceback (most recent call last):
    ...
TypeError: side must be an integer

>>> geom.integer_validator('side', None)
Traceback (most recent call last):
    ...
TypeError: side must be an integer

>>> geom.integer_validator('side', [3])
Traceback (most recent call last):
    ...
TypeError: side must be an integer

>>> geom.integer_validator('side', (4,))
Traceback (most recent call last):
    ...
TypeError: side must be an integer

>>> geom.integer_validator('side')
Traceback (most recent call last):
    ...
TypeError: side must be an integer

>>> geom.integer_validator()
Traceback (most recent call last):
    ...
TypeError: None must be an integer
